# SPDX-License-Identifier: Apache-2.0

[build-system]
requires = ["setuptools>=78.1.0", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "instructlab-sdg"
authors = [
    { name="InstructLab", email="dev@instructlab.ai" },
]
description = "Synthetic Data Generation"
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "License :: OSI Approved :: Apache Software License",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]
dynamic = ["dependencies", "optional-dependencies", "version"]

[project.scripts]

[project.urls]
homepage = "https://instructlab.ai"
source = "https://github.com/instructlab/sdg"
issues = "https://github.com/instructlab/sdg/issues"

[tool.setuptools_scm]
version_file = "src/instructlab/sdg/_version.py"
# do not include +gREV local version, required for Test PyPI upload
local_scheme = "no-local-version"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[tool.setuptools.packages.find]
where = ["src"]
include = ["instructlab.sdg"]

[tool.ruff]
target-version = "py310"
# same as black's default line length
line-length = 88

[tool.ruff.lint]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Fixers will be enabled gradually.
select = [
    # "B",  # flake8-bugbear
    # "E",  # pycodestyle
    # "F",  # Pyflakes
    "Q",  # flake8-quotes
    # Ruff does not support isort's import_headings feature, yet.
    # "I",  # isort
    # "UP",  # pyupgrade
    # "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
]
ignore = [
    # some embedded strings are longer than 88 characters
    "E501",  # line too long
    "TID252",  # Prefer absolute imports over relative imports from parent modules
]

[tool.ruff.lint.isort]
# same as .isort.cfg
from-first = true
# not supported yet
# import-heading-future=Future
# import-heading-stdlib=Standard
# import-heading-thirdparty=Third Party
# import-heading-firstparty=First Party
# import-heading-localfolder=Local
known-local-folder = ["tuning"]

[tool.mypy]
python_version = "3.10"
disable_error_code = ["import-not-found", "import-untyped"]
exclude = [
    "^src/instructlab/sdg/generate_data\\.py$",
    "^src/instructlab/sdg/utils/taxonomy\\.py$",
    "^src/instructlab/sdg/default_flows\\.py$",
    "^src/instructlab/sdg/blocks/llmblock\\.py$",
    "^src/instructlab/sdg/blocks/utilblocks\\.py$",
]
# honor excludes by not following there through imports
follow_imports = "silent"
